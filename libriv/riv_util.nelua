## pragmas.unitname = ''

require 'C.stdio'
require 'C.stdarg'
require '.riv_types'

-- Returns RIV version as an integer.
global function riv_version(): uint64 <cexport>
  return RIV_VERSION
end

-- Returns current machine cycle (USE ONLY FOR benchmarking).
global function riv_rdcycle(): uint64 <cexport>
  local cycle: uint64 <noinit,nodce>
  cemit![[asm volatile ("rdcycle %0" : "=r" (cycle));]]
  return cycle
end

-- Prints a formatted string to stdout.
global function riv_printf(format: cstring <const>, ...: cvarargs): usize <cexport>
  local args: cvalist
  C.va_start(args, format)
  local ret: cint = C.vprintf(format, args)
  C.va_end(args)
  if ret < 0 then ret = 0 end
  return ret
end

-- Formats an string.
global function riv_snprintf(s: cstring, maxlen: usize, format: cstring <const>, ...: cvarargs): usize <cexport>
  local args: cvalist
  C.va_start(args, format)
  local ret: cint = C.vsnprintf(s, maxlen, format, args)
  C.va_end(args)
  if ret < 0 then ret = 0 end
  return ret
end
