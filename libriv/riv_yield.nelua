## pragmas.unitname = ''

require 'linux'

-- Suspend execution for the host to handle an event.
local function softyield(a0: int64, a1: int64, a2: int64, a3: int64, a4: int64, a5: int64, a6: int64, a7: int64): int64 <noinline,cattribute'naked'>
  -- perform a soft yield
  cemit![[asm volatile ("sraiw x0, x31, 0\n\tret");]]
  -- the following is just to silence warning, because the function returns early
  return a0
end

-- Suspend execution for the host to handle an event.
global function riv_yield(cmd: riv_control_command): int64
  return softyield(cmd, 0, 0, 0, 0, 0, 0, 0)
end

-- Open yield device.
global function riv_yield_open(): void
  local no_yield_str: string = getenv('RIV_NO_YIELD')
  if no_yield_str == 'y' then return end
  riv.yielding = true
end

-- Close yield device.
global function riv_yield_close(): void
  riv.yielding = false
end
