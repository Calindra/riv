require 'sha3'

-- Macro to call a function returning its first result when successful,
-- otherwise raise an error prefixed with the faild function name.
## function fn_assert(v)
  local expr_ret, expr_err: string = #[v]#
  if #expr_err ~= 0 then
    ## local funcname = context.scope:get_up_scope_of_kind('is_function').funcsym.name
    error(#[funcname .. ': ']# .. expr_err)
  end
  in expr_ret
## end

global function keccak256(data: span(byte)): [32]byte
  local hash: [32]byte
  assert(sha3_HashBuffer(256, SHA3_FLAGS_KECCAK, data.data, data.size, &hash, #hash) == SHA3_RETURN_OK, 'keccak failed')
  return hash
end

global function hexhash(hash: [32]byte): string
  local sb: stringbuilder <close>
  for _, b: byte in ipairs(hash) do
    sb:writef('%02x', b)
  end
  return sb:promote()
end
