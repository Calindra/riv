##[[
cinclude 'sha3.h'
cfile 'sha3.c'
]]
global sha3_context: type <cimport,nodecl> = @record{
  saved: uint64,
  u: union{
    s: [25]uint64,
    sb: [200]uint8
  },
  byteIndex: cuint,
  wordIndex: cuint,
  capacityWords: cuint
}
global sha3_flags_t: type <cimport,nodecl,using> = @enum(cint){
  SHA3_FLAGS_NONE = 0,
  SHA3_FLAGS_KECCAK = 1
}
global sha3_return_t: type <cimport,nodecl,using> = @enum(cint){
  SHA3_RETURN_OK = 0,
  SHA3_RETURN_BAD_PARAMS = 1
}
global function sha3_Init(priv: pointer, bitSize: cuint): sha3_return_t <cimport,nodecl> end
global function sha3_Init256(priv: pointer): void <cimport,nodecl> end
global function sha3_Init384(priv: pointer): void <cimport,nodecl> end
global function sha3_Init512(priv: pointer): void <cimport,nodecl> end
global function sha3_SetFlags(priv: pointer, a2: sha3_flags_t): sha3_flags_t <cimport,nodecl> end
global function sha3_Update(priv: pointer, bufIn: pointer, len: csize): void <cimport,nodecl> end
global function sha3_Finalize(priv: pointer): pointer <cimport,nodecl> end
global function sha3_HashBuffer(bitSize: cuint, flags: sha3_flags_t, inBuf: pointer, inBytes: cuint, outBuf: pointer, outBytes: cuint): sha3_return_t <cimport,nodecl> end
global SHA3_KECCAK_SPONGE_WORDS: cint <comptime> = 25
